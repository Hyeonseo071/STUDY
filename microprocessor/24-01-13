2강 https://www.youtube.com/watch?v=a8cXa2AhrYI&list=PLz--ENLG_8TNjRg1OtyFBvUyV4PHaKwmu&index=5

Visual Studio Code VS Visual Studio (차이점)

사실 이번 년도에 들어서게 되면서 VS Code 말고도 VS(Visual Studio)라는 것을 새롭게 대면하게 되었다. 그래서 VS Code만을 사용해왔던 초짜인 나는 이 둘의 차이점에 대해 알아 볼 필요가 있었으므로 찾아본 결과.

-> Visual Studio Code : - 독립 파일 편집에 최적화 된, 즉 목적이 소스 코드 편집용 (단순히 편집 기능만 제공한다고 보면 됨.)
			- 컴파일러 포함 X (별도로 컴파일러를 깔아 줘야 함.) (+무료)

-> Visual Studio : 통합개발 환경(IDE) - 소스편집, 검파일(실행) 및 디버깅 등의 역할을 통틀어서
				      - 수행할 수 있는 통합개발환경을 의미한다.(+ 유료)

이런식의 차이점이 있다고 한다. (이렇게 보니 비주얼 스튜디오가 훨 좋은 개발환경으로 보이는 듯.)

___
(~본격적인 강의 내용~)

### 1.칩을 고르는 상황들 ~?   -양산
				->여러가지 조건들에 부합하는 최적의 칩을 선정한다.(ex : 칩의 단가는 적절한가? 안정성이 높은가? 수입성이 있는가? 등의 조건들을 고려.)
			     -개인적인 (일)업부(과제, 수업용 일경우)
				->시간 단축이 가장 중요함.
-> 칩을 선정하는 것도 자신만의 경험을 활용하는 것도 중요함. ->내가 사용해 본적이 있는지. 괜찮은 제품이 있는지.

### 2. 칩에 대한 설명들

- AVR 	->아트멜 사에서 개발한 8비트 마이크로컨트롤러 아키텍처 중 하나이다.(주로 임베디드 시스템 및 펌웨어 개발에 사용됨.)
	->PIC보다 처리 속도 빠름, 자원 풍부
	->ISP지원, C언어에 최적화
- PIC 	-> 마이크로칩 사에서 개발한 MCU(Microcontroller Unit)종류 중 하나이다. 


- ARM(현재는 ARM사가 대세) -> 아키텍처 기반의 중앙 처리 장치 제품.
      -> 제품의 종류(라인업)가 각양 각색 - Cortex-M0, Cortex-M4, Cortex-M0+ 시리즈(초저전력형)
      -> 에너지 효율성, 32bit, 가격 저렴, 소비전력 낮음, CPU설계.

- 쉽게 말하자면, MCU가 하는 역할 중 하나를 **DSP**로 보면 됨.

___

강의를 진행하시면서 드문드문 현(현 이라기엔 2년전이라는 좀 과거의 이야기지만...) 시장의 상황과, 임베디드 개발자라면 알아야 될 기본 제품의 개념의 틀을 크고 세부적으로 알려주셔서 좋은 것 같다.

조금씩 이지만, 이렇게 강의를 매일매일 하나 이상씩 보면서 보고 느낌점을 계속 남겨 볼려고 한다.
오늘은 여기까지 끝 -.