Python AI 딥 머신러닝 프로그래밍

딥 러닝 프레임워크 종류 >>
- 1.TensorFlow (딥 러닝에서 자주 언급되는 프레임워크이자, 인기가 높음.)
	- 고수준 및 저수준 API 개발에 사용.
	- python이 기본언어 지만, (c++, java, julia, JS등의 언어도 지원)
	-  빠른 기능 수행(동작)
TensorBoard를 통해 신경망의 개발을 "관찰"할 수 있다는 가능성에 추가되어 TensorFlow를 딥 러닝을 위한 가장 인기 있는 프레임워크로 만듭니다.

- 2.파이토치(PyTorch)
	- 동적으로 업데이트된 그래프를 작동.(데이터 세트의 아키텍처 변경 가능)
	- 딥 러닝에 대한 경험이 없어도 신경망을 개발 및 훈련이 간단함.
	- (오픈소스)python 기반, 디버그 가능, 쉽게 배우기 가능, 풍부한 API세트

________________________________________일단 이 두가지 프레임워크에 관심이 있고.

머신러닝의 특징 - 데이터로부터 학습, 컴퓨터가 스스로 학습, 과거의 경험을 토대로 결정 및 새로운 규칙 생성.
__________________
(전통적인 접근 방법(머신러닝X))
'어떤 문제'를 해결하기 위해, 프로그래머가 직접 규칙을 프로그래밍으로 짜야함. -규칙작성
	-> ex) if문 사용.(예: 스팸메일 필터 작성)
-> 오차발생시 그 해당 오차에 대해서 다시 (해결하기위한)분석하는 일을 반복해야함.
->길고 복잡해지는 규칙, 유지보수 비용 증가의 문제.

________________________________________
->이러한 문제를 머신러닝으로 해결할 수 있다.(짧아진 프로그램의 길이 및 높은 분류 정확도.)
(데이터 입력, 분류(머신러닝훈련), 규칙성 매핑, 솔루션 제공, 새로운 데이터 수집····반복작업.(자동으로 변화에 적응하도록 함.))
________________________________________________________________________________

<머신러닝에서의 지도학습에 따른 차이점 : 회귀, 분류>
- 회귀 : 연속형 데이터(ex:주택가격 예측, 주식 가격 예측 ->연속적)
	 수치(평균 제곱 오차, 평균 절대 오차)


- 분류 : 범주형 데이터(ex: 스팸분류, 손글씨 숫자 인식 등..)
	 주어진 입력을 몇 개의 범주 중 하나로 분류하는 것.(정확도, 정밀도, 재현율 ...등)
	-> 이것이 이 범주에 포함되는 가?

__________
-군집, 시각화와 차원축소, 연관 규칙 학습 이 세가지를 고려해여 머신러닝 기술에 반영해야함.





